---
name: Publish to PyPI

on:
  release:
    types:
      - created

jobs:
  typing:
    name: Typing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: poetry
      - name: Install dependencies
        run: poetry install
      - run: echo "$(poetry env info --path)/bin" >> $"GITHUB_PATH"
      - id: venv
        run: echo "python-path=$(poetry env info --path)/bin/python3" >> "$GITHUB_OUTPUT"
      - name: Check for pyright errors
        uses: jakebailey/pyright-action@v1
        with:
          python-path: ${{ steps.venv.outputs.python-path }}
  tests:
    runs-on: ubuntu-latest
    needs:
      - typing
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Install & Cache Dependencies
        id: cache-deps
        uses: allanchain/poetry-cache-action@release
        with:
          upload-strategy: on-success
          cache-key-prefix: python${{ matrix.python-version }}
      - name: Test with pytest
        run: poetry run pytest --showlocals -vvv --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Install & Cache Dependencies
        id: cache-deps
        uses: allanchain/poetry-cache-action@release
        with:
          upload-strategy: on-success
          cache-key-prefix: python3.10
      - name: Build and publish to PyPI
        run: |
          poetry build
          poetry publish --username __token__
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
